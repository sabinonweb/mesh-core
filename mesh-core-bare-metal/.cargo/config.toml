[target.'cfg(all(target_arch = "arm", target_os = "none"))']
# TODO(2) replace `$CHIP` with your chip's name (see `probe-rs chip list` output)
runner = ["probe-rs", "run", "--chip", "$CHIP", "--log-format=oneline"]
# If you have an nRF52, you might also want to add "--allow-erase-all" to the list

[target.thumbv7m-none-eabi]
# uncomment this to make `cargo run` execute programs on QEMU
runner = "qemu-system-arm -cpu cortex-m3 -machine lm3s6965evb -nographic -semihosting-config enable=on,target=native -kernel"


rustflags = [
  "-C", "linker=rust-lld",
  "-C", "link-arg=-Tlink.x",
  "-C", "link-arg=--nmagic",
]

[build]
# TODO(3) Adjust the compilation target.
# Select the correct target for your processor:
# target = "thumbv6m-none-eabi"    # Cortex-M0 and Cortex-M0+
target = "thumbv7m-none-eabi"    # Cortex-M3
# target = "thumbv7em-none-eabi"   # Cortex-M4 and Cortex-M7 (no FPU)
# target = "thumbv7em-none-eabihf" # Cortex-M4F and Cortex-M7F (with FPU)

[alias]
# `cargo rb foo` will expand to `cargo run --bin foo`
rb = "run --bin"
# `cargo rrb foo` will expand to `cargo run --release --bin foo`
rrb = "run --release --bin"
